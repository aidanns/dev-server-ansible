---

- name: "Install epel"
  yum:
    name: epel-release
    state: present
  become: yes
  become_user: root

- name: "Install yum-utils"
  yum:
    name: yum-utils
    state: present
  become: yes
  become_user: root

- name: "Install device-mapper-persistent-data"
  yum:
    name: device-mapper-persistent-data
    state: present
  become: yes
  become_user: root

- name: "Install lvm2"
  yum:
    name: lvm2
    state: present
  become: yes
  become_user: root

- name: "Install docker-ce yum repo"
  shell: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
  become: yes
  become_user: root

- name: "Install docker-ce"
  yum:
    name: docker-ce
    state: present
  become: yes
  become_user: root
  
- name: "Install docker-python"
  yum:
    name: docker-python
    state: present
  become: yes
  become_user: root

- name: "Start the docker service"
  service:
    name: docker
    state: started
  become: yes
  become_user: root

- name: "Start guacamole-guacd"
  docker_container:
    name: guacamole-guacd
    image: guacamole/guacd
    state: started
    pull: true
  become: yes
  become_user: root

- name: "Start guacamole-postgres"
  docker_container:
    name: guacamole-postgres
    image: postgres
    state: started
    pull: true
  become: yes
  become_user: root

- name: "Render guacamole postgres init script"
  shell: "docker run --rm guacamole/guacamole /opt/guacamole/bin/initdb.sh --postgres >> /tmp/initdb.sql"
  args:
    creates: /tmp/initdb.sql
  become: yes
  become_user: root

- name: "Copy the postgres init sql in to the postgres container"
  shell: "docker cp /tmp/initdb.sql guacamole-postgres:/initdb.sql"
  become: yes
  become_user: root

- name: "Render the guacamole init script on to the remote host"
  template:
    src: templates/init_guacamole_postgres.sh
    dest: /tmp/init_guacamole_postgres.sh
    owner: root
    group: root
    mode: 0700
  become: yes
  become_user: root

- name: "Copy the guacamole init script in to the postgres container"
  shell: "docker cp /tmp/init_guacamole_postgres.sh guacamole-postgres:/init_guacamole_postgres.sh"
  become: yes
  become_user: root

- name: "Make the script executable inside the container"
  shell: "docker exec guacamole-postgres /bin/bash -c 'chmod 755 /init_guacamole_postgres.sh'"
  become: yes
  become_user: root

- name: "Make the sql readable inside the container"
  shell: "docker exec guacamole-postgres /bin/bash -c 'chmod 644 /initdb.sql'"
  become: yes
  become_user: root

- name: "Run the guacamole init script in the postgres container"
  shell: "docker exec -u postgres guacamole-postgres /bin/bash -c /init_guacamole_postgres.sh"
  become: yes
  become_user: root

- name: "Start guacamole-guacamole"
  docker_container:
    name: guacamole-guacamole
    image: guacamole/guacamole
    state: started
    pull: true
    links:
      - "guacamole-guacd:guacd"
      - "guacamole-postgres:postgres"
    env:
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_USER: guacamole_user
      POSTGRES_PASSWORD: password
      VIRTUAL_HOST: remote.aidanns.com
      LETSENCRYPT_HOST: remote.aidanns.com
      LETSENCRYPT_EMAIL: aidanns@gmail.com
    ports:
      - "8080:8080"
  become: yes
  become_user: root

- name: "Start nginx"
  docker_container:
    name: guacamole-frontend
    image: jwilder/nginx-proxy:alpine
    state: started
    pull: true
    volumes:
      - "/etc/nginx/certs:/etc/nginx/certs:ro"
      - "/etc/nginx/vhost.d:/etc/nginx/vhost.d:ro"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: ""
    ports:
      - "80:80"
      - "443:443"
  become: yes
  become_user: root

- name: "Start Nginx Letsencrypt sidecar."
  docker_container:
    name: guacamole-nginx-letsencrypt-sidecar
    image: jrcs/letsencrypt-nginx-proxy-companion
    state: started
    pull: true
    volumes_from:
      - "guacamole-frontend"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      - "/etc/nginx/certs:/etc/nginx/certs:rw"
      - "/etc/nginx/vhost.d:/etc/nginx/vhost.d:rw"
  become: yes
  become_user: root
